package Composite

import "fmt"

func MakeArray() {
	//В Go в массиве обязательно нужно передавать тип переменной, все элементы должны иметь данный тип
	//Также для массива обязательно передавать длину
	//Длина массива входит в его тип
	//Если выйти за пределы массива есть вероятность получить panic

	var ArrayExample1 [3]int = [3]int{1, 2, 3}
	var ArrayExample2 [3]int = [3]int{} //Если не задать элементы → все будут равны нулевому значению:
	ArrayExample3 := [3]int{1, 2, 3}

	fmt.Println("Массив 1:", ArrayExample1)
	fmt.Println("Массив 2:", ArrayExample2)
	fmt.Println("Массив 3:", ArrayExample3)

	//Массивы могут быть многомерными
	matrix := [2][3]int{
		{1, 2, 3},
		{4, 5, 6},
	}

	fmt.Println("Пример многомерного массива:", matrix)

}

func ComparesArrays() {
	//Массивы можно сравнивать, если:
	//у них одинаковая длина
	//одинаковый тип элементов
}

func FunctionsArrays() {
	//В Go у массивов особо нет "своих методов", потому что массив — это примитивный тип фиксированной длины
	//cap(array) - возвращает размер len(array) - возвращает длину
}
